name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: ESLint test
        run: npm run lint
      - name: Create Issue on Failed workflow
        if: ${{ failure() }}
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ secrets.REPO_TOKEN }}
          title: Action workflow failed.
          body: |
            ### Context
            [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Workflow name - `${{ github.workflow }}`
            Job -           `${{ github.job }}`
            Status -        `${{ job.status }}`
            Branch -        `${{ github.ref }}`
          labels: bug
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run build
        run: npm run build
      - name: Create an issue
        if: ${{ success() }}
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ secrets.REPO_TOKEN }}
          title: Check's Passed
          body: |
            ### Context
            Github actions lint and build test's passed
            [Successful Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Workflow name - `${{ github.workflow }}`
            Job -           `${{ github.job }}`
            Status -        `${{ job.status }}`
            Branch -        `${{ github.ref }}`
          labels: pass
      - name: Create Issue on Failed workflow
        if: ${{ failure() }}
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ secrets.REPO_TOKEN }}
          title: Action workflow failed.
          body: |
            ### Context
            Github actions lint and build test's failed
            [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Workflow name - `${{ github.workflow }}`
            Job -           `${{ github.job }}`
            Status -        `${{ job.status }}`
            Branch -        `${{ github.ref }}`
          labels: bug
  Deploy-production:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run build
        run: npm run build
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Create Issue on Success workflow
        if: ${{ success() }}
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ secrets.REPO_TOKEN }}
          title: Deployed to Vercel server
          body: |
            ### Context
            Github actions deployed to vercel server
            [Successful Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Workflow name - `${{ github.workflow }}`
            Job -           `${{ github.job }}`
            Status -        `${{ job.status }}`
            Branch -        `${{ github.ref }}`
          labels: deployed
      - name: Create Issue on Failed workflow
        if: ${{ failure() }}
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ secrets.REPO_TOKEN }}
          title: Action workflow failed.
          body: |
            ### Context
            Github actions deployment failed
            [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Workflow name - `${{ github.workflow }}`
            Job -           `${{ github.job }}`
            Status -        `${{ job.status }}`
            Branch -        `${{ github.ref }}`
          labels: bug
